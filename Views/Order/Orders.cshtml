@using Diploma.Entities
@model IEnumerable<Diploma.Entities.Order>

@{
    ViewData["Title"] = "Всички поръчки";
}

<div class="page-header">
    <div class="container">
        <div class="row align-items-center">
            <div class="col-md-6">
                <h1>Всички поръчки</h1>
                <p>Управление на поръчките в системата</p>
            </div>
            <div class="col-md-6 text-md-end">
                <a href="/Order/Create" class="btn btn-primary">
                    <i class="bi bi-plus-circle me-2"></i>Нова поръчка
                </a>
            </div>
        </div>
    </div>
</div>

<div class="container">
    <div class="card shadow-sm">
        <div class="card-header bg-white py-3">
            <div class="row align-items-center">
                <div class="col-md-8">
                    <h5 class="mb-0 text-primary">Списък с всички поръчки</h5>
                </div>
                <div class="col-md-4">
                    <div class="input-group">
                        <span class="input-group-text bg-light border-0">
                            <i class="bi bi-search text-muted"></i>
                        </span>
                        <input type="text" id="orderSearch" class="form-control border-0 bg-light" placeholder="Търсене на поръчки...">
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Filter Section -->
        <div class="card-body border-bottom pb-0">
            <div class="row">
                <div class="col-md-12">
                    <div class="filter-container mb-3">
                        <div class="d-flex flex-wrap gap-2">
                            <div class="filter-group">
                                <label class="form-label mb-1">Статус</label>
                                <select id="statusFilter" class="form-select form-select-sm">
                                    <option value="">Всички статуси</option>
                                    @{
                                        var statuses = Enum.GetValues(typeof(Diploma.Entities.OrderStatus))
                                            .Cast<Diploma.Entities.OrderStatus>();
                                        foreach (var status in statuses)
                                        {
                                            string statusText = "";
                                            switch (status)
                                            {
                                                case Diploma.Entities.OrderStatus.Незапочната:
                                                    statusText = "Чакащ";
                                                    break;
                                                case Diploma.Entities.OrderStatus.Незавършена:
                                                    statusText = "В процес";
                                                    break;
                                                case Diploma.Entities.OrderStatus.Завършена:
                                                    statusText = "Завършен";
                                                    break;
                                                case Diploma.Entities.OrderStatus.Отказана:
                                                    statusText = "Отказан";
                                                    break;
                                            }
                                            <option value="@statusText">@statusText</option>
                                        }
                                    }
                                </select>
                            </div>
                            
                            <div class="filter-group">
                                <label class="form-label mb-1">Марка</label>
                                <select id="brandFilter" class="form-select form-select-sm">
                                    <option value="">Всички марки</option>
                                    @{
                                        if (Model != null && Model.Any())
                                        {
                                            var brands = Model.Select(o => o.Product?.Brand)
                                                .Where(b => b != null)
                                                .Distinct()
                                                .OrderBy(b => b);
                                            foreach (var brand in brands)
                                            {
                                                <option value="@brand">@brand</option>
                                            }
                                        }
                                    }
                                </select>
                            </div>
                            
                            <div class="filter-group ms-auto">
                                <label class="form-label mb-1">Сортиране</label>
                                <select id="sortFilter" class="form-select form-select-sm">
                                    <option value="date-desc">Дата (Най-нови)</option>
                                    <option value="date">Дата (Най-стари)</option>
                                    <option value="status">Статус</option>
                                    <option value="client">Клиент (А-Я)</option>
                                </select>
                            </div>
                            
                            <div class="filter-group d-flex align-items-end">
                                <button id="resetFilters" class="btn btn-sm btn-outline-secondary">
                                    <i class="bi bi-x-circle me-1"></i>Нулиране
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-hover align-middle mb-0" id="ordersTable">
                    <thead class="table-light">
                        <tr>
                            <th class="ps-4">Поръчка №</th>
                            <th>Клиент</th>
                            <th>Продукт</th>
                            <th>Тип ремонт</th>
                            <th>Дата</th>
                            <th>Статус</th>
                            <th class="text-end pe-4">Действия</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model != null && Model.Any())
                        {
                            foreach (var order in Model)
                            {
                                var statusClass = order.OrderStatus == OrderStatus.Незавършена ? "bg-warning text-dark" :
                                                order.OrderStatus == OrderStatus.Завършена ? "bg-success" :
                                                order.OrderStatus == OrderStatus.Незапочната ? "bg-info text-dark" : "bg-secondary";
                                var statusText = "";
                                switch (order.OrderStatus)
                                {
                                    case OrderStatus.Незапочната:
                                        statusText = "Чакащ";
                                        break;
                                    case OrderStatus.Незавършена:
                                        statusText = "В процес";
                                        break;
                                    case OrderStatus.Завършена:
                                        statusText = "Завършен";
                                        break;
                                    case OrderStatus.Отказана:
                                        statusText = "Отказан";
                                        break;
                                }
                                
                                <tr data-status="@statusText" data-brand="@order.Product?.Brand">
                                    <td class="ps-4"><span class="order-id">#@order.Id.Substring(0, 5)</span></td>
                                    <td>@order.User.FirstName @order.User.LastName</td>
                                    <td>@order.Product?.Brand @order.Product?.Model</td>
                                    <td>
                                        @switch (order.Repair.RepairType)
                                        {
                                            case RepairType.Съдомиялна:
                                                <span>Диагностика</span>
                                                break;
                                            case RepairType.Хладилник:
                                                <span>Ремонт</span>
                                                break;
                                            case RepairType.Печка:
                                                <span>Поддръжка</span>
                                                break;
                                            case RepairType.Пералня:
                                                <span>Подмяна на части</span>
                                                break;
                                            default:
                                                <span>Друго</span>
                                                break;
                                        }
                                    </td>
                                    <td>@order.RegistrationDate.ToString("dd.MM.yyyy")</td>
                                    <td><span class="badge @statusClass">@statusText</span></td>
                                    <td class="text-end pe-4">
                                        <div class="dropdown">
                                            <button class="btn btn-sm btn-light" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                                <i class="bi bi-three-dots"></i>
                                            </button>
                                            <ul class="dropdown-menu dropdown-menu-end">
                                                <li><a class="dropdown-item" href="/Order/Details/@order.Id"><i class="bi bi-eye me-2 text-primary"></i>Преглед</a></li>
                                                <li><a class="dropdown-item" href="/Order/Update/@order.Id"><i class="bi bi-pencil me-2 text-secondary"></i>Редактиране</a></li>
                                                @if (order.OrderStatus == OrderStatus.Незапочната)
                                                {
                                                    <li><a class="dropdown-item assign-technician-btn" href="#" data-bs-toggle="modal" data-bs-target="#assignTechnicianModal" data-order-id="@order.Id"><i class="bi bi-person-check me-2 text-success"></i>Назначи техник</a></li>
                                                }
                                                <li><hr class="dropdown-divider"></li>
                                                <li><a class="dropdown-item text-danger delete-order-btn" href="#" data-bs-toggle="modal" data-bs-target="#deleteOrderModal" data-order-id="@order.Id"><i class="bi bi-trash me-2"></i>Изтриване</a></li>
                                            </ul>
                                        </div>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="7" class="text-center py-5">
                                    <div class="py-5">
                                        <i class="bi bi-clipboard-x text-muted" style="font-size: 3rem;"></i>
                                        <h5 class="mt-3">Няма намерени поръчки</h5>
                                        <p class="text-muted mb-3">Все още няма поръчки в системата.</p>
                                        <a href="/Order/Create" class="btn btn-primary">
                                            <i class="bi bi-plus-circle me-2"></i>Създай нова поръчка
                                        </a>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
        <div class="card-footer bg-white py-3">
            <div class="row align-items-center">
                <div class="col-md-6">
                    <p class="mb-0 text-muted">Показване на <span id="visibleCount">@(Model?.Count() ?? 0)</span> от @(Model?.Count() ?? 0) поръчки</p>
                </div>
                <div class="col-md-6 text-md-end">
                    <nav aria-label="Page navigation">
                        <ul class="pagination pagination-sm mb-0 justify-content-end">
                            <li class="page-item disabled">
                                <a class="page-link" href="#" tabindex="-1" aria-disabled="true">Предишна</a>
                            </li>
                            <li class="page-item active"><a class="page-link" href="#">1</a></li>
                            <li class="page-item"><a class="page-link" href="#">2</a></li>
                            <li class="page-item"><a class="page-link" href="#">3</a></li>
                            <li class="page-item">
                                <a class="page-link" href="#">Следваща</a>
                            </li>
                        </ul>
                    </nav>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="deleteOrderModal" tabindex="-1" aria-labelledby="deleteOrderModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header border-0">
                <h5 class="modal-title" id="deleteOrderModalLabel">Потвърждение за изтриване</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body text-center py-4">
                <i class="bi bi-exclamation-triangle text-warning" style="font-size: 3rem;"></i>
                <h5 class="mt-3">Сигурни ли сте?</h5>
                <p class="text-muted">Наистина ли желаете да изтриете тази поръчка? Този процес е необратим.</p>
            </div>
            <div class="modal-footer border-0">
                <button type="button" class="btn btn-light" data-bs-dismiss="modal">Отказ</button>
                <a href="#" id="confirmDeleteBtn" class="btn btn-danger">Изтрий поръчката</a>
            </div>
        </div>
    </div>
</div>

<!-- Assign Technician Modal -->
<div class="modal fade" id="assignTechnicianModal" tabindex="-1" aria-labelledby="assignTechnicianModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header border-0">
                <h5 class="modal-title" id="assignTechnicianModalLabel">Назначаване на техник</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Изберете техник за поръчка <strong id="modalOrderId"></strong></p>
                <div class="mb-3">
                    <label for="technicianSelect" class="form-label">Техник</label>
                    <select id="technicianSelect" class="form-select">
                        <option value="">-- Изберете техник --</option>
                    </select>
                </div>
            </div>
            <div class="modal-footer border-0">
                <button type="button" class="btn btn-light" data-bs-dismiss="modal">Отказ</button>
                <form id="assignTechnicianForm" method="post" action="/Order/AssignToTechnician">
                    @Html.AntiForgeryToken()
                    <input type="hidden" id="assignOrderId" name="orderId" value="" />
                    <input type="hidden" id="assignTechnicianId" name="technicianId" value="" />
                    <button type="submit" class="btn btn-primary">Назначи</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Search functionality
            $("#orderSearch").on("keyup", function() {
                applyFilters();
            });
            
            // Filter functionality
            $("#statusFilter, #brandFilter, #sortFilter").on("change", function() {
                applyFilters();
            });
            
            // Reset filters
            $("#resetFilters").on("click", function() {
                $("#orderSearch").val("");
                $("#statusFilter").val("");
                $("#brandFilter").val("");
                $("#sortFilter").val("date-desc");
                applyFilters();
            });
            
            // Handle delete modal
            $(document).on('click', '.delete-order-btn', function() {
                var orderId = $(this).data('order-id');
                $('#confirmDeleteBtn').attr('href', '/Order/Delete/' + orderId);
            });
            
            // Handle assign technician modal
            $(document).on('click', '.assign-technician-btn', function() {
                var orderId = $(this).data('order-id');
                var orderShortId = orderId.substring(0, 5);
                $('#modalOrderId').text('#' + orderShortId);
                $('#assignOrderId').val(orderId);
                
                loadTechnicians();
            });
            
            // Update hidden technician ID when select changes
            $('#technicianSelect').on('change', function() {
                $('#assignTechnicianId').val($(this).val());
            });
            
            function loadTechnicians() {
                $.ajax({
                    url: '/Admin/GetTechnicians',
                    type: 'GET',
                    dataType: 'json',
                    success: function(technicians) {
                        var select = $('#technicianSelect');
                        select.find('option:not(:first)').remove();
                        
                        technicians.forEach(function(tech) {
                            select.append(`<option value="${tech.id}">${tech.firstName} ${tech.lastName}</option>`);
                        });
                    },
                    error: function(error) {
                        console.error('Error loading technicians:', error);
                    }
                });
            }
            
            function applyFilters() {
                var searchValue = $("#orderSearch").val().toLowerCase();
                var statusFilter = $("#statusFilter").val();
                var brandFilter = $("#brandFilter").val();
                var sortFilter = $("#sortFilter").val();
                var visibleCount = 0;
                
                // First hide/show based on filters
                $("#ordersTable tbody tr").each(function() {
                    var row = $(this);
                    var rowText = row.text().toLowerCase();
                    var rowStatus = row.data("status");
                    var rowBrand = row.data("brand");
                    
                    var matchesSearch = rowText.indexOf(searchValue) > -1;
                    var matchesStatus = statusFilter === "" || rowStatus === statusFilter;
                    var matchesBrand = brandFilter === "" || rowBrand === brandFilter;
                    
                    var isVisible = matchesSearch && matchesStatus && matchesBrand;
                    row.toggle(isVisible);
                    
                    if (isVisible) visibleCount++;
                });
                
                // Then sort the visible rows
                var rows = $("#ordersTable tbody tr:visible").get();
                rows.sort(function(a, b) {
                    var keyA, keyB;
                    
                    switch(sortFilter) {
                        case "date":
                            keyA = $(a).find("td:eq(4)").text();
                            keyB = $(b).find("td:eq(4)").text();
                            return new Date(keyA) - new Date(keyB);
                        case "date-desc":
                            keyA = $(a).find("td:eq(4)").text();
                            keyB = $(b).find("td:eq(4)").text();
                            return new Date(keyB) - new Date(keyA);
                        case "status":
                            keyA = $(a).find("td:eq(5)").text();
                            keyB = $(b).find("td:eq(5)").text();
                            return keyA.localeCompare(keyB);
                        case "client":
                            keyA = $(a).find("td:eq(1)").text();
                            keyB = $(b).find("td:eq(1)").text();
                            return keyA.localeCompare(keyB);
                        default:
                            return 0;
                    }
                });
                
                // Reappend in the new order
                $.each(rows, function(index, row) {
                    $("#ordersTable tbody").append(row);
                });
                
                $("#visibleCount").text(visibleCount);
            }
            
            // Initialize tooltips
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });
        });
    </script>
}
